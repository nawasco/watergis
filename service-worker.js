const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.B7FF4l4Q.js",s+"/_app/immutable/nodes/0.B5p1D9Vr.js",s+"/_app/immutable/nodes/1.Bk-brElp.js",s+"/_app/immutable/nodes/2.C3OaJVAh.js",s+"/_app/immutable/assets/2.uwFESmvd.css",s+"/_app/immutable/chunks/2.BFJZ37OQ.js",s+"/_app/immutable/chunks/entry.CmPeeEu7.js",s+"/_app/immutable/chunks/index.1SCKA1N5.js",s+"/_app/immutable/chunks/preload-helper.BQ24v_F8.js",s+"/_app/immutable/chunks/scheduler.8CIpFoHz.js",s+"/_app/immutable/chunks/stores.BvshyKZX.js",s+"/_app/immutable/entry/start.EXmNidJm.js",s+"/_app/immutable/chunks/index.es.BVDJ3hWw.js",s+"/_app/immutable/chunks/purify.es.CwLlgRcy.js",s+"/_app/immutable/chunks/html2canvas.esm.3NQT9CgR.js"],p=[s+"/.nojekyll",s+"/assets/icons/icon-128x128.png",s+"/assets/icons/icon-144x144.png",s+"/assets/icons/icon-152x152.png",s+"/assets/icons/icon-192x192.png",s+"/assets/icons/icon-384x384.png",s+"/assets/icons/icon-48x48.png",s+"/assets/icons/icon-512x512.png",s+"/assets/icons/icon-72x72.png",s+"/assets/icons/icon-96x96.png",s+"/assets/preview-1200x630.png",s+"/assets/tutorial/attr-table-selectbox.png",s+"/assets/tutorial/eye-solid.svg",s+"/assets/tutorial/isochrone-example.png",s+"/assets/tutorial/isochrone-tool.png",s+"/assets/tutorial/magnifying-glass-plus-solid.svg",s+"/assets/tutorial/measure-tool.png",s+"/assets/tutorial/palette-solid.svg",s+"/assets/tutorial/routing-tool.png",s+"/assets/tutorial/style-switcher.png",s+"/assets/tutorial/up-down-left-right-solid.svg",s+"/favicon.png",s+"/manifest.webmanifest",s+"/robots.txt"],u="1712968884347",o=`cache-${u}`,c=[...l,...p];self.addEventListener("install",t=>{async function a(){await(await caches.open(o)).addAll(c)}t.waitUntil(a())});self.addEventListener("activate",t=>{async function a(){for(const e of await caches.keys())e!==o&&await caches.delete(e)}t.waitUntil(a())});self.addEventListener("fetch",t=>{if(t.request.method!=="GET")return;async function a(){const e=new URL(t.request.url),n=await caches.open(o);if(c.includes(e.pathname))return n.match(e.pathname);try{const i=await fetch(t.request);return i.status===200&&n.put(t.request,i.clone()),i}catch{return n.match(t.request)}}t.respondWith(a())});
